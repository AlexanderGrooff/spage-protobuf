// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: spage/core/common.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskStatus represents the status of a task
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_RUNNING     TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4
	TaskStatus_TASK_STATUS_CANCELED    TaskStatus = 5
	TaskStatus_TASK_STATUS_SKIPPED     TaskStatus = 6
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_RUNNING",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_CANCELED",
		6: "TASK_STATUS_SKIPPED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_RUNNING":     2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_CANCELED":    5,
		"TASK_STATUS_SKIPPED":     6,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spage_core_common_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_spage_core_common_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{0}
}

// ===== Device Code Enrollment (OAuth-style) =====
type DeviceEnrollStatus int32

const (
	DeviceEnrollStatus_DEVICE_ENROLL_PENDING  DeviceEnrollStatus = 0
	DeviceEnrollStatus_DEVICE_ENROLL_APPROVED DeviceEnrollStatus = 1
	DeviceEnrollStatus_DEVICE_ENROLL_DENIED   DeviceEnrollStatus = 2
	DeviceEnrollStatus_DEVICE_ENROLL_EXPIRED  DeviceEnrollStatus = 3
)

// Enum value maps for DeviceEnrollStatus.
var (
	DeviceEnrollStatus_name = map[int32]string{
		0: "DEVICE_ENROLL_PENDING",
		1: "DEVICE_ENROLL_APPROVED",
		2: "DEVICE_ENROLL_DENIED",
		3: "DEVICE_ENROLL_EXPIRED",
	}
	DeviceEnrollStatus_value = map[string]int32{
		"DEVICE_ENROLL_PENDING":  0,
		"DEVICE_ENROLL_APPROVED": 1,
		"DEVICE_ENROLL_DENIED":   2,
		"DEVICE_ENROLL_EXPIRED":  3,
	}
)

func (x DeviceEnrollStatus) Enum() *DeviceEnrollStatus {
	p := new(DeviceEnrollStatus)
	*p = x
	return p
}

func (x DeviceEnrollStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceEnrollStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spage_core_common_proto_enumTypes[1].Descriptor()
}

func (DeviceEnrollStatus) Type() protoreflect.EnumType {
	return &file_spage_core_common_proto_enumTypes[1]
}

func (x DeviceEnrollStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceEnrollStatus.Descriptor instead.
func (DeviceEnrollStatus) EnumDescriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{1}
}

// Error represents an error response
type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_spage_core_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// HealthStatus represents the health status of a component
type HealthStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "healthy", "unhealthy", "degraded"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_spage_core_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{1}
}

func (x *HealthStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthStatus) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *HealthStatus) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// SpageTask represents a task with all its metadata
type SpageTask struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status      TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=spage.core.TaskStatus" json:"status,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Optional textual output and error summary for the task
	Output        string `protobuf:"bytes,8,opt,name=output,proto3" json:"output,omitempty"`
	Error         string `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpageTask) Reset() {
	*x = SpageTask{}
	mi := &file_spage_core_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpageTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpageTask) ProtoMessage() {}

func (x *SpageTask) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpageTask.ProtoReflect.Descriptor instead.
func (*SpageTask) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{2}
}

func (x *SpageTask) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpageTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpageTask) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *SpageTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SpageTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SpageTask) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *SpageTask) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *SpageTask) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *SpageTask) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TaskMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Duration      float64                `protobuf:"fixed64,1,opt,name=duration,proto3" json:"duration,omitempty"`                                  // Duration in seconds
	MemoryAlloc   float64                `protobuf:"fixed64,2,opt,name=memory_alloc,json=memoryAlloc,proto3" json:"memory_alloc,omitempty"`         // Memory allocated in bytes
	MemoryHeap    float64                `protobuf:"fixed64,3,opt,name=memory_heap,json=memoryHeap,proto3" json:"memory_heap,omitempty"`            // Memory heap in bytes
	MemorySys     float64                `protobuf:"fixed64,4,opt,name=memory_sys,json=memorySys,proto3" json:"memory_sys,omitempty"`               // Memory system in bytes
	MemoryHeapSys float64                `protobuf:"fixed64,5,opt,name=memory_heap_sys,json=memoryHeapSys,proto3" json:"memory_heap_sys,omitempty"` // Memory heap system in bytes
	GcCycles      float64                `protobuf:"fixed64,6,opt,name=gc_cycles,json=gcCycles,proto3" json:"gc_cycles,omitempty"`                  // Garbage collection cycles
	Goroutines    float64                `protobuf:"fixed64,7,opt,name=goroutines,proto3" json:"goroutines,omitempty"`                              // Goroutines
	CpuCount      float64                `protobuf:"fixed64,8,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`                  // CPU count
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMetrics) Reset() {
	*x = TaskMetrics{}
	mi := &file_spage_core_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetrics) ProtoMessage() {}

func (x *TaskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetrics.ProtoReflect.Descriptor instead.
func (*TaskMetrics) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{3}
}

func (x *TaskMetrics) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TaskMetrics) GetMemoryAlloc() float64 {
	if x != nil {
		return x.MemoryAlloc
	}
	return 0
}

func (x *TaskMetrics) GetMemoryHeap() float64 {
	if x != nil {
		return x.MemoryHeap
	}
	return 0
}

func (x *TaskMetrics) GetMemorySys() float64 {
	if x != nil {
		return x.MemorySys
	}
	return 0
}

func (x *TaskMetrics) GetMemoryHeapSys() float64 {
	if x != nil {
		return x.MemoryHeapSys
	}
	return 0
}

func (x *TaskMetrics) GetGcCycles() float64 {
	if x != nil {
		return x.GcCycles
	}
	return 0
}

func (x *TaskMetrics) GetGoroutines() float64 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

func (x *TaskMetrics) GetCpuCount() float64 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

// TaskResult represents the result of a task execution
type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Status        TaskStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=spage.core.TaskStatus" json:"status,omitempty"`
	Output        string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Metrics       *TaskMetrics           `protobuf:"bytes,6,opt,name=metrics,proto3" json:"metrics,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_spage_core_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{4}
}

func (x *TaskResult) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskResult) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskResult) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *TaskResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TaskResult) GetMetrics() *TaskMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TaskResult) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskResult) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type TaskProgressUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayId        string                 `protobuf:"bytes,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	TaskId        int32                  `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,3,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Result        *TaskResult            `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskProgressUpdate) Reset() {
	*x = TaskProgressUpdate{}
	mi := &file_spage_core_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskProgressUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgressUpdate) ProtoMessage() {}

func (x *TaskProgressUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgressUpdate.ProtoReflect.Descriptor instead.
func (*TaskProgressUpdate) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{5}
}

func (x *TaskProgressUpdate) GetPlayId() string {
	if x != nil {
		return x.PlayId
	}
	return ""
}

func (x *TaskProgressUpdate) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskProgressUpdate) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskProgressUpdate) GetResult() *TaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskProgressUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Envelope for daemon control commands
type CommandEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	DaemonId      string                 `protobuf:"bytes,2,opt,name=daemon_id,json=daemonId,proto3" json:"daemon_id,omitempty"`
	// Types that are valid to be assigned to Body:
	//
	//	*CommandEnvelope_Start
	//	*CommandEnvelope_Cancel
	//	*CommandEnvelope_Ping
	Body          isCommandEnvelope_Body `protobuf_oneof:"body"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandEnvelope) Reset() {
	*x = CommandEnvelope{}
	mi := &file_spage_core_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandEnvelope) ProtoMessage() {}

func (x *CommandEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandEnvelope.ProtoReflect.Descriptor instead.
func (*CommandEnvelope) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{6}
}

func (x *CommandEnvelope) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommandEnvelope) GetDaemonId() string {
	if x != nil {
		return x.DaemonId
	}
	return ""
}

func (x *CommandEnvelope) GetBody() isCommandEnvelope_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *CommandEnvelope) GetStart() *StartSpageRequest {
	if x != nil {
		if x, ok := x.Body.(*CommandEnvelope_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *CommandEnvelope) GetCancel() *CancelPlayRequest {
	if x != nil {
		if x, ok := x.Body.(*CommandEnvelope_Cancel); ok {
			return x.Cancel
		}
	}
	return nil
}

func (x *CommandEnvelope) GetPing() *PingRequest {
	if x != nil {
		if x, ok := x.Body.(*CommandEnvelope_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

type isCommandEnvelope_Body interface {
	isCommandEnvelope_Body()
}

type CommandEnvelope_Start struct {
	Start *StartSpageRequest `protobuf:"bytes,10,opt,name=start,proto3,oneof"`
}

type CommandEnvelope_Cancel struct {
	Cancel *CancelPlayRequest `protobuf:"bytes,11,opt,name=cancel,proto3,oneof"`
}

type CommandEnvelope_Ping struct {
	Ping *PingRequest `protobuf:"bytes,12,opt,name=ping,proto3,oneof"`
}

func (*CommandEnvelope_Start) isCommandEnvelope_Body() {}

func (*CommandEnvelope_Cancel) isCommandEnvelope_Body() {}

func (*CommandEnvelope_Ping) isCommandEnvelope_Body() {}

type StartSpageRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	PlayId    string                 `protobuf:"bytes,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	Playbook  string                 `protobuf:"bytes,2,opt,name=playbook,proto3" json:"playbook,omitempty"`
	Inventory string                 `protobuf:"bytes,3,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Variables map[string]string      `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Optional runtime configuration to control Spage behavior
	Config        *SpageRunConfig `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSpageRequest) Reset() {
	*x = StartSpageRequest{}
	mi := &file_spage_core_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSpageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSpageRequest) ProtoMessage() {}

func (x *StartSpageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSpageRequest.ProtoReflect.Descriptor instead.
func (*StartSpageRequest) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{7}
}

func (x *StartSpageRequest) GetPlayId() string {
	if x != nil {
		return x.PlayId
	}
	return ""
}

func (x *StartSpageRequest) GetPlaybook() string {
	if x != nil {
		return x.Playbook
	}
	return ""
}

func (x *StartSpageRequest) GetInventory() string {
	if x != nil {
		return x.Inventory
	}
	return ""
}

func (x *StartSpageRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *StartSpageRequest) GetConfig() *SpageRunConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CancelPlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayId        string                 `protobuf:"bytes,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelPlayRequest) Reset() {
	*x = CancelPlayRequest{}
	mi := &file_spage_core_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPlayRequest) ProtoMessage() {}

func (x *CancelPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPlayRequest.ProtoReflect.Descriptor instead.
func (*CancelPlayRequest) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{8}
}

func (x *CancelPlayRequest) GetPlayId() string {
	if x != nil {
		return x.PlayId
	}
	return ""
}

func (x *CancelPlayRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_spage_core_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{9}
}

type CommandResultEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Verb          string                 `protobuf:"bytes,2,opt,name=verb,proto3" json:"verb,omitempty"` // start, cancel, ping
	PlayId        string                 `protobuf:"bytes,3,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResultEvent) Reset() {
	*x = CommandResultEvent{}
	mi := &file_spage_core_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResultEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResultEvent) ProtoMessage() {}

func (x *CommandResultEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResultEvent.ProtoReflect.Descriptor instead.
func (*CommandResultEvent) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{10}
}

func (x *CommandResultEvent) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommandResultEvent) GetVerb() string {
	if x != nil {
		return x.Verb
	}
	return ""
}

func (x *CommandResultEvent) GetPlayId() string {
	if x != nil {
		return x.PlayId
	}
	return ""
}

func (x *CommandResultEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResultEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CommandResultEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Telemetry events (task-level; play/metrics events are in events.proto to avoid cycles)
type TaskEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayId        string                 `protobuf:"bytes,1,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	Task          *SpageTask             `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskEvent) Reset() {
	*x = TaskEvent{}
	mi := &file_spage_core_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskEvent) ProtoMessage() {}

func (x *TaskEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskEvent.ProtoReflect.Descriptor instead.
func (*TaskEvent) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{11}
}

func (x *TaskEvent) GetPlayId() string {
	if x != nil {
		return x.PlayId
	}
	return ""
}

func (x *TaskEvent) GetTask() *SpageTask {
	if x != nil {
		return x.Task
	}
	return nil
}

// ===== Run-time configuration passed with StartSpageRequest =====
type LoggingConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	File          string                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"` // "json" | "yaml" | "plain"
	Timestamps    bool                   `protobuf:"varint,4,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoggingConfig) Reset() {
	*x = LoggingConfig{}
	mi := &file_spage_core_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingConfig) ProtoMessage() {}

func (x *LoggingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingConfig.ProtoReflect.Descriptor instead.
func (*LoggingConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{12}
}

func (x *LoggingConfig) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LoggingConfig) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *LoggingConfig) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *LoggingConfig) GetTimestamps() bool {
	if x != nil {
		return x.Timestamps
	}
	return false
}

type TemporalConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Address          string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	TaskQueue        string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	WorkflowIdPrefix string                 `protobuf:"bytes,3,opt,name=workflow_id_prefix,json=workflowIdPrefix,proto3" json:"workflow_id_prefix,omitempty"`
	Trigger          bool                   `protobuf:"varint,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TemporalConfig) Reset() {
	*x = TemporalConfig{}
	mi := &file_spage_core_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemporalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemporalConfig) ProtoMessage() {}

func (x *TemporalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemporalConfig.ProtoReflect.Descriptor instead.
func (*TemporalConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{13}
}

func (x *TemporalConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TemporalConfig) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *TemporalConfig) GetWorkflowIdPrefix() string {
	if x != nil {
		return x.WorkflowIdPrefix
	}
	return ""
}

func (x *TemporalConfig) GetTrigger() bool {
	if x != nil {
		return x.Trigger
	}
	return false
}

type APIConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HttpBase      string                 `protobuf:"bytes,1,opt,name=http_base,json=httpBase,proto3" json:"http_base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIConfig) Reset() {
	*x = APIConfig{}
	mi := &file_spage_core_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIConfig) ProtoMessage() {}

func (x *APIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIConfig.ProtoReflect.Descriptor instead.
func (*APIConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{14}
}

func (x *APIConfig) GetHttpBase() string {
	if x != nil {
		return x.HttpBase
	}
	return ""
}

type DaemonConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	PlayId        string                 `protobuf:"bytes,3,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	TimeoutMs     int64                  `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"` // duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DaemonConfig) Reset() {
	*x = DaemonConfig{}
	mi := &file_spage_core_common_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DaemonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonConfig) ProtoMessage() {}

func (x *DaemonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonConfig.ProtoReflect.Descriptor instead.
func (*DaemonConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{15}
}

func (x *DaemonConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DaemonConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *DaemonConfig) GetPlayId() string {
	if x != nil {
		return x.PlayId
	}
	return ""
}

func (x *DaemonConfig) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

type TagsConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	SkipTags      []string               `protobuf:"bytes,2,rep,name=skip_tags,json=skipTags,proto3" json:"skip_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagsConfig) Reset() {
	*x = TagsConfig{}
	mi := &file_spage_core_common_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsConfig) ProtoMessage() {}

func (x *TagsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsConfig.ProtoReflect.Descriptor instead.
func (*TagsConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{16}
}

func (x *TagsConfig) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TagsConfig) GetSkipTags() []string {
	if x != nil {
		return x.SkipTags
	}
	return nil
}

type PrivilegeEscalationConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UseInteractive bool                   `protobuf:"varint,1,opt,name=use_interactive,json=useInteractive,proto3" json:"use_interactive,omitempty"` // -Su vs -u
	BecomeFlags    string                 `protobuf:"bytes,2,opt,name=become_flags,json=becomeFlags,proto3" json:"become_flags,omitempty"`           // additional flags
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PrivilegeEscalationConfig) Reset() {
	*x = PrivilegeEscalationConfig{}
	mi := &file_spage_core_common_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivilegeEscalationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivilegeEscalationConfig) ProtoMessage() {}

func (x *PrivilegeEscalationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivilegeEscalationConfig.ProtoReflect.Descriptor instead.
func (*PrivilegeEscalationConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{17}
}

func (x *PrivilegeEscalationConfig) GetUseInteractive() bool {
	if x != nil {
		return x.UseInteractive
	}
	return false
}

func (x *PrivilegeEscalationConfig) GetBecomeFlags() string {
	if x != nil {
		return x.BecomeFlags
	}
	return ""
}

type SpageRunConfig struct {
	state               protoimpl.MessageState     `protogen:"open.v1"`
	Logging             *LoggingConfig             `protobuf:"bytes,1,opt,name=logging,proto3" json:"logging,omitempty"`
	ExecutionMode       string                     `protobuf:"bytes,2,opt,name=execution_mode,json=executionMode,proto3" json:"execution_mode,omitempty"` // "parallel" | "sequential"
	Executor            string                     `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`                                // "local" | "temporal"
	Temporal            *TemporalConfig            `protobuf:"bytes,4,opt,name=temporal,proto3" json:"temporal,omitempty"`
	Api                 *APIConfig                 `protobuf:"bytes,5,opt,name=api,proto3" json:"api,omitempty"`
	Daemon              *DaemonConfig              `protobuf:"bytes,6,opt,name=daemon,proto3" json:"daemon,omitempty"`
	Revert              bool                       `protobuf:"varint,7,opt,name=revert,proto3" json:"revert,omitempty"`
	Tags                *TagsConfig                `protobuf:"bytes,8,opt,name=tags,proto3" json:"tags,omitempty"`
	Facts               *structpb.Struct           `protobuf:"bytes,9,opt,name=facts,proto3" json:"facts,omitempty"` // arbitrary key/value facts
	HostKeyChecking     bool                       `protobuf:"varint,10,opt,name=host_key_checking,json=hostKeyChecking,proto3" json:"host_key_checking,omitempty"`
	RolesPath           string                     `protobuf:"bytes,11,opt,name=roles_path,json=rolesPath,proto3" json:"roles_path,omitempty"` // colon-delimited
	Inventory           string                     `protobuf:"bytes,12,opt,name=inventory,proto3" json:"inventory,omitempty"`                  // optional override
	PrivilegeEscalation *PrivilegeEscalationConfig `protobuf:"bytes,13,opt,name=privilege_escalation,json=privilegeEscalation,proto3" json:"privilege_escalation,omitempty"`
	ApiToken            string                     `protobuf:"bytes,14,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"` // bearer token for CLI auth
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SpageRunConfig) Reset() {
	*x = SpageRunConfig{}
	mi := &file_spage_core_common_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpageRunConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpageRunConfig) ProtoMessage() {}

func (x *SpageRunConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpageRunConfig.ProtoReflect.Descriptor instead.
func (*SpageRunConfig) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{18}
}

func (x *SpageRunConfig) GetLogging() *LoggingConfig {
	if x != nil {
		return x.Logging
	}
	return nil
}

func (x *SpageRunConfig) GetExecutionMode() string {
	if x != nil {
		return x.ExecutionMode
	}
	return ""
}

func (x *SpageRunConfig) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *SpageRunConfig) GetTemporal() *TemporalConfig {
	if x != nil {
		return x.Temporal
	}
	return nil
}

func (x *SpageRunConfig) GetApi() *APIConfig {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *SpageRunConfig) GetDaemon() *DaemonConfig {
	if x != nil {
		return x.Daemon
	}
	return nil
}

func (x *SpageRunConfig) GetRevert() bool {
	if x != nil {
		return x.Revert
	}
	return false
}

func (x *SpageRunConfig) GetTags() *TagsConfig {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SpageRunConfig) GetFacts() *structpb.Struct {
	if x != nil {
		return x.Facts
	}
	return nil
}

func (x *SpageRunConfig) GetHostKeyChecking() bool {
	if x != nil {
		return x.HostKeyChecking
	}
	return false
}

func (x *SpageRunConfig) GetRolesPath() string {
	if x != nil {
		return x.RolesPath
	}
	return ""
}

func (x *SpageRunConfig) GetInventory() string {
	if x != nil {
		return x.Inventory
	}
	return ""
}

func (x *SpageRunConfig) GetPrivilegeEscalation() *PrivilegeEscalationConfig {
	if x != nil {
		return x.PrivilegeEscalation
	}
	return nil
}

func (x *SpageRunConfig) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

// Enrollment over NATS
type EnrollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DaemonId      string                 `protobuf:"bytes,1,opt,name=daemon_id,json=daemonId,proto3" json:"daemon_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Capabilities  map[string]string      `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrollRequest) Reset() {
	*x = EnrollRequest{}
	mi := &file_spage_core_common_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollRequest) ProtoMessage() {}

func (x *EnrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollRequest.ProtoReflect.Descriptor instead.
func (*EnrollRequest) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{19}
}

func (x *EnrollRequest) GetDaemonId() string {
	if x != nil {
		return x.DaemonId
	}
	return ""
}

func (x *EnrollRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EnrollRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EnrollRequest) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type EnrollReply struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// NATS creds content (JWT + NKey seed), PEM-like blocks
	Creds         string `protobuf:"bytes,3,opt,name=creds,proto3" json:"creds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrollReply) Reset() {
	*x = EnrollReply{}
	mi := &file_spage_core_common_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrollReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollReply) ProtoMessage() {}

func (x *EnrollReply) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollReply.ProtoReflect.Descriptor instead.
func (*EnrollReply) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{20}
}

func (x *EnrollReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EnrollReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *EnrollReply) GetCreds() string {
	if x != nil {
		return x.Creds
	}
	return ""
}

type DeviceEnrollBeginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceEnrollBeginRequest) Reset() {
	*x = DeviceEnrollBeginRequest{}
	mi := &file_spage_core_common_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceEnrollBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEnrollBeginRequest) ProtoMessage() {}

func (x *DeviceEnrollBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEnrollBeginRequest.ProtoReflect.Descriptor instead.
func (*DeviceEnrollBeginRequest) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{21}
}

func (x *DeviceEnrollBeginRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DeviceEnrollBeginRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DeviceEnrollBeginReply struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	DeviceCode              string                 `protobuf:"bytes,1,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`                                          // secret for polling
	UserCode                string                 `protobuf:"bytes,2,opt,name=user_code,json=userCode,proto3" json:"user_code,omitempty"`                                                // human-friendly code to enter in browser
	VerificationUri         string                 `protobuf:"bytes,3,opt,name=verification_uri,json=verificationUri,proto3" json:"verification_uri,omitempty"`                           // base URL where user enters the code
	VerificationUriComplete string                 `protobuf:"bytes,4,opt,name=verification_uri_complete,json=verificationUriComplete,proto3" json:"verification_uri_complete,omitempty"` // full URL with code embedded (optional)
	ExpiresIn               int32                  `protobuf:"varint,5,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`                                            // seconds
	Interval                int32                  `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"`                                                               // recommended poll interval seconds
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeviceEnrollBeginReply) Reset() {
	*x = DeviceEnrollBeginReply{}
	mi := &file_spage_core_common_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceEnrollBeginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEnrollBeginReply) ProtoMessage() {}

func (x *DeviceEnrollBeginReply) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEnrollBeginReply.ProtoReflect.Descriptor instead.
func (*DeviceEnrollBeginReply) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{22}
}

func (x *DeviceEnrollBeginReply) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *DeviceEnrollBeginReply) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *DeviceEnrollBeginReply) GetVerificationUri() string {
	if x != nil {
		return x.VerificationUri
	}
	return ""
}

func (x *DeviceEnrollBeginReply) GetVerificationUriComplete() string {
	if x != nil {
		return x.VerificationUriComplete
	}
	return ""
}

func (x *DeviceEnrollBeginReply) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *DeviceEnrollBeginReply) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type DeviceEnrollPollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceCode    string                 `protobuf:"bytes,1,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceEnrollPollRequest) Reset() {
	*x = DeviceEnrollPollRequest{}
	mi := &file_spage_core_common_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceEnrollPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEnrollPollRequest) ProtoMessage() {}

func (x *DeviceEnrollPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEnrollPollRequest.ProtoReflect.Descriptor instead.
func (*DeviceEnrollPollRequest) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{23}
}

func (x *DeviceEnrollPollRequest) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

type DeviceEnrollPollReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        DeviceEnrollStatus     `protobuf:"varint,1,opt,name=status,proto3,enum=spage.core.DeviceEnrollStatus" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	DaemonId      string                 `protobuf:"bytes,3,opt,name=daemon_id,json=daemonId,proto3" json:"daemon_id,omitempty"`
	Creds         string                 `protobuf:"bytes,4,opt,name=creds,proto3" json:"creds,omitempty"` // NATS creds when approved
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceEnrollPollReply) Reset() {
	*x = DeviceEnrollPollReply{}
	mi := &file_spage_core_common_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceEnrollPollReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEnrollPollReply) ProtoMessage() {}

func (x *DeviceEnrollPollReply) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_common_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEnrollPollReply.ProtoReflect.Descriptor instead.
func (*DeviceEnrollPollReply) Descriptor() ([]byte, []int) {
	return file_spage_core_common_proto_rawDescGZIP(), []int{24}
}

func (x *DeviceEnrollPollReply) GetStatus() DeviceEnrollStatus {
	if x != nil {
		return x.Status
	}
	return DeviceEnrollStatus_DEVICE_ENROLL_PENDING
}

func (x *DeviceEnrollPollReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeviceEnrollPollReply) GetDaemonId() string {
	if x != nil {
		return x.DaemonId
	}
	return ""
}

func (x *DeviceEnrollPollReply) GetCreds() string {
	if x != nil {
		return x.Creds
	}
	return ""
}

var File_spage_core_common_proto protoreflect.FileDescriptor

const file_spage_core_common_proto_rawDesc = "" +
	"\n" +
	"\x17spage/core/common.proto\x12\n" +
	"spage.core\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xab\x01\n" +
	"\x05Error\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\adetails\x18\x03 \x03(\v2\x1e.spage.core.Error.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x01\n" +
	"\fHealthStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12?\n" +
	"\adetails\x18\x03 \x03(\v2%.spage.core.HealthStatus.DetailsEntryR\adetails\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x02\n" +
	"\tSpageTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.spage.core.TaskStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x16\n" +
	"\x06output\x18\b \x01(\tR\x06output\x12\x14\n" +
	"\x05error\x18\t \x01(\tR\x05error\"\x8e\x02\n" +
	"\vTaskMetrics\x12\x1a\n" +
	"\bduration\x18\x01 \x01(\x01R\bduration\x12!\n" +
	"\fmemory_alloc\x18\x02 \x01(\x01R\vmemoryAlloc\x12\x1f\n" +
	"\vmemory_heap\x18\x03 \x01(\x01R\n" +
	"memoryHeap\x12\x1d\n" +
	"\n" +
	"memory_sys\x18\x04 \x01(\x01R\tmemorySys\x12&\n" +
	"\x0fmemory_heap_sys\x18\x05 \x01(\x01R\rmemoryHeapSys\x12\x1b\n" +
	"\tgc_cycles\x18\x06 \x01(\x01R\bgcCycles\x12\x1e\n" +
	"\n" +
	"goroutines\x18\a \x01(\x01R\n" +
	"goroutines\x12\x1b\n" +
	"\tcpu_count\x18\b \x01(\x01R\bcpuCount\"\xcd\x02\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x02 \x01(\tR\btaskName\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.spage.core.TaskStatusR\x06status\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x121\n" +
	"\ametrics\x18\x06 \x01(\v2\x17.spage.core.TaskMetricsR\ametrics\x129\n" +
	"\n" +
	"started_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\xcd\x01\n" +
	"\x12TaskProgressUpdate\x12\x17\n" +
	"\aplay_id\x18\x01 \x01(\tR\x06playId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\x05R\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x03 \x01(\tR\btaskName\x12.\n" +
	"\x06result\x18\x04 \x01(\v2\x16.spage.core.TaskResultR\x06result\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xfc\x01\n" +
	"\x0fCommandEnvelope\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\tR\rcorrelationId\x12\x1b\n" +
	"\tdaemon_id\x18\x02 \x01(\tR\bdaemonId\x125\n" +
	"\x05start\x18\n" +
	" \x01(\v2\x1d.spage.core.StartSpageRequestH\x00R\x05start\x127\n" +
	"\x06cancel\x18\v \x01(\v2\x1d.spage.core.CancelPlayRequestH\x00R\x06cancel\x12-\n" +
	"\x04ping\x18\f \x01(\v2\x17.spage.core.PingRequestH\x00R\x04pingB\x06\n" +
	"\x04body\"\xa4\x02\n" +
	"\x11StartSpageRequest\x12\x17\n" +
	"\aplay_id\x18\x01 \x01(\tR\x06playId\x12\x1a\n" +
	"\bplaybook\x18\x02 \x01(\tR\bplaybook\x12\x1c\n" +
	"\tinventory\x18\x03 \x01(\tR\tinventory\x12J\n" +
	"\tvariables\x18\x04 \x03(\v2,.spage.core.StartSpageRequest.VariablesEntryR\tvariables\x122\n" +
	"\x06config\x18\x05 \x01(\v2\x1a.spage.core.SpageRunConfigR\x06config\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"D\n" +
	"\x11CancelPlayRequest\x12\x17\n" +
	"\aplay_id\x18\x01 \x01(\tR\x06playId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\r\n" +
	"\vPingRequest\"\xd2\x01\n" +
	"\x12CommandResultEvent\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\tR\rcorrelationId\x12\x12\n" +
	"\x04verb\x18\x02 \x01(\tR\x04verb\x12\x17\n" +
	"\aplay_id\x18\x03 \x01(\tR\x06playId\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"O\n" +
	"\tTaskEvent\x12\x17\n" +
	"\aplay_id\x18\x01 \x01(\tR\x06playId\x12)\n" +
	"\x04task\x18\x02 \x01(\v2\x15.spage.core.SpageTaskR\x04task\"q\n" +
	"\rLoggingConfig\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x12\n" +
	"\x04file\x18\x02 \x01(\tR\x04file\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12\x1e\n" +
	"\n" +
	"timestamps\x18\x04 \x01(\bR\n" +
	"timestamps\"\x91\x01\n" +
	"\x0eTemporalConfig\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12,\n" +
	"\x12workflow_id_prefix\x18\x03 \x01(\tR\x10workflowIdPrefix\x12\x18\n" +
	"\atrigger\x18\x04 \x01(\bR\atrigger\"(\n" +
	"\tAPIConfig\x12\x1b\n" +
	"\thttp_base\x18\x01 \x01(\tR\bhttpBase\"|\n" +
	"\fDaemonConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\x12\x17\n" +
	"\aplay_id\x18\x03 \x01(\tR\x06playId\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x03R\ttimeoutMs\"=\n" +
	"\n" +
	"TagsConfig\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\x12\x1b\n" +
	"\tskip_tags\x18\x02 \x03(\tR\bskipTags\"g\n" +
	"\x19PrivilegeEscalationConfig\x12'\n" +
	"\x0fuse_interactive\x18\x01 \x01(\bR\x0euseInteractive\x12!\n" +
	"\fbecome_flags\x18\x02 \x01(\tR\vbecomeFlags\"\xee\x04\n" +
	"\x0eSpageRunConfig\x123\n" +
	"\alogging\x18\x01 \x01(\v2\x19.spage.core.LoggingConfigR\alogging\x12%\n" +
	"\x0eexecution_mode\x18\x02 \x01(\tR\rexecutionMode\x12\x1a\n" +
	"\bexecutor\x18\x03 \x01(\tR\bexecutor\x126\n" +
	"\btemporal\x18\x04 \x01(\v2\x1a.spage.core.TemporalConfigR\btemporal\x12'\n" +
	"\x03api\x18\x05 \x01(\v2\x15.spage.core.APIConfigR\x03api\x120\n" +
	"\x06daemon\x18\x06 \x01(\v2\x18.spage.core.DaemonConfigR\x06daemon\x12\x16\n" +
	"\x06revert\x18\a \x01(\bR\x06revert\x12*\n" +
	"\x04tags\x18\b \x01(\v2\x16.spage.core.TagsConfigR\x04tags\x12-\n" +
	"\x05facts\x18\t \x01(\v2\x17.google.protobuf.StructR\x05facts\x12*\n" +
	"\x11host_key_checking\x18\n" +
	" \x01(\bR\x0fhostKeyChecking\x12\x1d\n" +
	"\n" +
	"roles_path\x18\v \x01(\tR\trolesPath\x12\x1c\n" +
	"\tinventory\x18\f \x01(\tR\tinventory\x12X\n" +
	"\x14privilege_escalation\x18\r \x01(\v2%.spage.core.PrivilegeEscalationConfigR\x13privilegeEscalation\x12\x1b\n" +
	"\tapi_token\x18\x0e \x01(\tR\bapiToken\"\xf4\x01\n" +
	"\rEnrollRequest\x12\x1b\n" +
	"\tdaemon_id\x18\x01 \x01(\tR\bdaemonId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12O\n" +
	"\fcapabilities\x18\x04 \x03(\v2+.spage.core.EnrollRequest.CapabilitiesEntryR\fcapabilities\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"S\n" +
	"\vEnrollReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x14\n" +
	"\x05creds\x18\x03 \x01(\tR\x05creds\"P\n" +
	"\x18DeviceEnrollBeginRequest\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xf8\x01\n" +
	"\x16DeviceEnrollBeginReply\x12\x1f\n" +
	"\vdevice_code\x18\x01 \x01(\tR\n" +
	"deviceCode\x12\x1b\n" +
	"\tuser_code\x18\x02 \x01(\tR\buserCode\x12)\n" +
	"\x10verification_uri\x18\x03 \x01(\tR\x0fverificationUri\x12:\n" +
	"\x19verification_uri_complete\x18\x04 \x01(\tR\x17verificationUriComplete\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x05 \x01(\x05R\texpiresIn\x12\x1a\n" +
	"\binterval\x18\x06 \x01(\x05R\binterval\":\n" +
	"\x17DeviceEnrollPollRequest\x12\x1f\n" +
	"\vdevice_code\x18\x01 \x01(\tR\n" +
	"deviceCode\"\x98\x01\n" +
	"\x15DeviceEnrollPollReply\x126\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1e.spage.core.DeviceEnrollStatusR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x1b\n" +
	"\tdaemon_id\x18\x03 \x01(\tR\bdaemonId\x12\x14\n" +
	"\x05creds\x18\x04 \x01(\tR\x05creds*\xc1\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13TASK_STATUS_RUNNING\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_COMPLETED\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x18\n" +
	"\x14TASK_STATUS_CANCELED\x10\x05\x12\x17\n" +
	"\x13TASK_STATUS_SKIPPED\x10\x06*\x80\x01\n" +
	"\x12DeviceEnrollStatus\x12\x19\n" +
	"\x15DEVICE_ENROLL_PENDING\x10\x00\x12\x1a\n" +
	"\x16DEVICE_ENROLL_APPROVED\x10\x01\x12\x18\n" +
	"\x14DEVICE_ENROLL_DENIED\x10\x02\x12\x19\n" +
	"\x15DEVICE_ENROLL_EXPIRED\x10\x03B6Z4github.com/AlexanderGrooff/spage-protobuf/spage/coreb\x06proto3"

var (
	file_spage_core_common_proto_rawDescOnce sync.Once
	file_spage_core_common_proto_rawDescData []byte
)

func file_spage_core_common_proto_rawDescGZIP() []byte {
	file_spage_core_common_proto_rawDescOnce.Do(func() {
		file_spage_core_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spage_core_common_proto_rawDesc), len(file_spage_core_common_proto_rawDesc)))
	})
	return file_spage_core_common_proto_rawDescData
}

var file_spage_core_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spage_core_common_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_spage_core_common_proto_goTypes = []any{
	(TaskStatus)(0),                   // 0: spage.core.TaskStatus
	(DeviceEnrollStatus)(0),           // 1: spage.core.DeviceEnrollStatus
	(*Error)(nil),                     // 2: spage.core.Error
	(*HealthStatus)(nil),              // 3: spage.core.HealthStatus
	(*SpageTask)(nil),                 // 4: spage.core.SpageTask
	(*TaskMetrics)(nil),               // 5: spage.core.TaskMetrics
	(*TaskResult)(nil),                // 6: spage.core.TaskResult
	(*TaskProgressUpdate)(nil),        // 7: spage.core.TaskProgressUpdate
	(*CommandEnvelope)(nil),           // 8: spage.core.CommandEnvelope
	(*StartSpageRequest)(nil),         // 9: spage.core.StartSpageRequest
	(*CancelPlayRequest)(nil),         // 10: spage.core.CancelPlayRequest
	(*PingRequest)(nil),               // 11: spage.core.PingRequest
	(*CommandResultEvent)(nil),        // 12: spage.core.CommandResultEvent
	(*TaskEvent)(nil),                 // 13: spage.core.TaskEvent
	(*LoggingConfig)(nil),             // 14: spage.core.LoggingConfig
	(*TemporalConfig)(nil),            // 15: spage.core.TemporalConfig
	(*APIConfig)(nil),                 // 16: spage.core.APIConfig
	(*DaemonConfig)(nil),              // 17: spage.core.DaemonConfig
	(*TagsConfig)(nil),                // 18: spage.core.TagsConfig
	(*PrivilegeEscalationConfig)(nil), // 19: spage.core.PrivilegeEscalationConfig
	(*SpageRunConfig)(nil),            // 20: spage.core.SpageRunConfig
	(*EnrollRequest)(nil),             // 21: spage.core.EnrollRequest
	(*EnrollReply)(nil),               // 22: spage.core.EnrollReply
	(*DeviceEnrollBeginRequest)(nil),  // 23: spage.core.DeviceEnrollBeginRequest
	(*DeviceEnrollBeginReply)(nil),    // 24: spage.core.DeviceEnrollBeginReply
	(*DeviceEnrollPollRequest)(nil),   // 25: spage.core.DeviceEnrollPollRequest
	(*DeviceEnrollPollReply)(nil),     // 26: spage.core.DeviceEnrollPollReply
	nil,                               // 27: spage.core.Error.DetailsEntry
	nil,                               // 28: spage.core.HealthStatus.DetailsEntry
	nil,                               // 29: spage.core.StartSpageRequest.VariablesEntry
	nil,                               // 30: spage.core.EnrollRequest.CapabilitiesEntry
	(*timestamppb.Timestamp)(nil),     // 31: google.protobuf.Timestamp
	(*structpb.Struct)(nil),           // 32: google.protobuf.Struct
}
var file_spage_core_common_proto_depIdxs = []int32{
	27, // 0: spage.core.Error.details:type_name -> spage.core.Error.DetailsEntry
	28, // 1: spage.core.HealthStatus.details:type_name -> spage.core.HealthStatus.DetailsEntry
	31, // 2: spage.core.HealthStatus.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 3: spage.core.SpageTask.status:type_name -> spage.core.TaskStatus
	31, // 4: spage.core.SpageTask.created_at:type_name -> google.protobuf.Timestamp
	31, // 5: spage.core.SpageTask.updated_at:type_name -> google.protobuf.Timestamp
	31, // 6: spage.core.SpageTask.started_at:type_name -> google.protobuf.Timestamp
	31, // 7: spage.core.SpageTask.completed_at:type_name -> google.protobuf.Timestamp
	0,  // 8: spage.core.TaskResult.status:type_name -> spage.core.TaskStatus
	5,  // 9: spage.core.TaskResult.metrics:type_name -> spage.core.TaskMetrics
	31, // 10: spage.core.TaskResult.started_at:type_name -> google.protobuf.Timestamp
	31, // 11: spage.core.TaskResult.completed_at:type_name -> google.protobuf.Timestamp
	6,  // 12: spage.core.TaskProgressUpdate.result:type_name -> spage.core.TaskResult
	31, // 13: spage.core.TaskProgressUpdate.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 14: spage.core.CommandEnvelope.start:type_name -> spage.core.StartSpageRequest
	10, // 15: spage.core.CommandEnvelope.cancel:type_name -> spage.core.CancelPlayRequest
	11, // 16: spage.core.CommandEnvelope.ping:type_name -> spage.core.PingRequest
	29, // 17: spage.core.StartSpageRequest.variables:type_name -> spage.core.StartSpageRequest.VariablesEntry
	20, // 18: spage.core.StartSpageRequest.config:type_name -> spage.core.SpageRunConfig
	31, // 19: spage.core.CommandResultEvent.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 20: spage.core.TaskEvent.task:type_name -> spage.core.SpageTask
	14, // 21: spage.core.SpageRunConfig.logging:type_name -> spage.core.LoggingConfig
	15, // 22: spage.core.SpageRunConfig.temporal:type_name -> spage.core.TemporalConfig
	16, // 23: spage.core.SpageRunConfig.api:type_name -> spage.core.APIConfig
	17, // 24: spage.core.SpageRunConfig.daemon:type_name -> spage.core.DaemonConfig
	18, // 25: spage.core.SpageRunConfig.tags:type_name -> spage.core.TagsConfig
	32, // 26: spage.core.SpageRunConfig.facts:type_name -> google.protobuf.Struct
	19, // 27: spage.core.SpageRunConfig.privilege_escalation:type_name -> spage.core.PrivilegeEscalationConfig
	30, // 28: spage.core.EnrollRequest.capabilities:type_name -> spage.core.EnrollRequest.CapabilitiesEntry
	1,  // 29: spage.core.DeviceEnrollPollReply.status:type_name -> spage.core.DeviceEnrollStatus
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_spage_core_common_proto_init() }
func file_spage_core_common_proto_init() {
	if File_spage_core_common_proto != nil {
		return
	}
	file_spage_core_common_proto_msgTypes[6].OneofWrappers = []any{
		(*CommandEnvelope_Start)(nil),
		(*CommandEnvelope_Cancel)(nil),
		(*CommandEnvelope_Ping)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spage_core_common_proto_rawDesc), len(file_spage_core_common_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spage_core_common_proto_goTypes,
		DependencyIndexes: file_spage_core_common_proto_depIdxs,
		EnumInfos:         file_spage_core_common_proto_enumTypes,
		MessageInfos:      file_spage_core_common_proto_msgTypes,
	}.Build()
	File_spage_core_common_proto = out.File
	file_spage_core_common_proto_goTypes = nil
	file_spage_core_common_proto_depIdxs = nil
}
