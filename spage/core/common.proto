syntax = "proto3";

package spage.core;

option go_package = "github.com/AlexanderGrooff/spage-protobuf/spage/core";

import "google/protobuf/timestamp.proto";

// Error represents an error response
message Error {
  string code = 1;
  string message = 2;
  map<string, string> details = 3;
}

// HealthStatus represents the health status of a component
message HealthStatus {
  string status = 1; // "healthy", "unhealthy", "degraded"
  string message = 2;
  map<string, string> details = 3;
  google.protobuf.Timestamp timestamp = 4;
}

// TaskStatus represents the status of a task
enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_PENDING = 1;
  TASK_STATUS_RUNNING = 2;
  TASK_STATUS_COMPLETED = 3;
  TASK_STATUS_FAILED = 4;
  TASK_STATUS_CANCELED = 5;
  TASK_STATUS_SKIPPED = 6;
}

// SpageTask represents a task with all its metadata
message SpageTask {
  string id = 1;
  TaskStatus status = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
  google.protobuf.Timestamp started_at = 5;
  google.protobuf.Timestamp completed_at = 6;
  // Optional textual output and error summary for the task
  string output = 7;
  string error = 8;
}

message TaskMetrics {
  double duration = 1; // Duration in seconds
  double memory_alloc = 2; // Memory allocated in bytes
  double memory_heap = 3; // Memory heap in bytes
  double memory_sys = 4; // Memory system in bytes
  double memory_heap_sys = 5; // Memory heap system in bytes
  double gc_cycles = 6; // Garbage collection cycles
  double goroutines = 7; // Goroutines
  double cpu_count = 8; // CPU count
}

// TaskResult represents the result of a task execution
message TaskResult {
  string task_id = 1;
  TaskStatus status = 2;
  string output = 3;
  string error = 4;
  TaskMetrics metrics = 5;
  google.protobuf.Timestamp started_at = 6;
  google.protobuf.Timestamp completed_at = 7;
}

message TaskProgressUpdate {
  string task_id = 1;
  TaskResult result = 2;
  google.protobuf.Timestamp timestamp = 3;
}
