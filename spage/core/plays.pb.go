// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: spage/core/plays.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PlayStatus represents the status of a play
type PlayStatus int32

const (
	PlayStatus_PLAY_STATUS_UNSPECIFIED PlayStatus = 0
	PlayStatus_PLAY_STATUS_PENDING     PlayStatus = 1
	PlayStatus_PLAY_STATUS_RUNNING     PlayStatus = 2
	PlayStatus_PLAY_STATUS_COMPLETED   PlayStatus = 3
	PlayStatus_PLAY_STATUS_FAILED      PlayStatus = 4
	PlayStatus_PLAY_STATUS_CANCELED    PlayStatus = 5
)

// Enum value maps for PlayStatus.
var (
	PlayStatus_name = map[int32]string{
		0: "PLAY_STATUS_UNSPECIFIED",
		1: "PLAY_STATUS_PENDING",
		2: "PLAY_STATUS_RUNNING",
		3: "PLAY_STATUS_COMPLETED",
		4: "PLAY_STATUS_FAILED",
		5: "PLAY_STATUS_CANCELED",
	}
	PlayStatus_value = map[string]int32{
		"PLAY_STATUS_UNSPECIFIED": 0,
		"PLAY_STATUS_PENDING":     1,
		"PLAY_STATUS_RUNNING":     2,
		"PLAY_STATUS_COMPLETED":   3,
		"PLAY_STATUS_FAILED":      4,
		"PLAY_STATUS_CANCELED":    5,
	}
)

func (x PlayStatus) Enum() *PlayStatus {
	p := new(PlayStatus)
	*p = x
	return p
}

func (x PlayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spage_core_plays_proto_enumTypes[0].Descriptor()
}

func (PlayStatus) Type() protoreflect.EnumType {
	return &file_spage_core_plays_proto_enumTypes[0]
}

func (x PlayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayStatus.Descriptor instead.
func (PlayStatus) EnumDescriptor() ([]byte, []int) {
	return file_spage_core_plays_proto_rawDescGZIP(), []int{0}
}

// SpagePlay represents a play with all its metadata
type SpagePlay struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Playbook    string                 `protobuf:"bytes,2,opt,name=playbook,proto3" json:"playbook,omitempty"`
	Inventory   string                 `protobuf:"bytes,3,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Hostname    string                 `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Variables   map[string]string      `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status      PlayStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=spage.core.PlayStatus" json:"status,omitempty"`
	Tasks       []*SpageTask           `protobuf:"bytes,7,rep,name=tasks,proto3" json:"tasks,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Optional play-level error if the play failed
	Error         string `protobuf:"bytes,12,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpagePlay) Reset() {
	*x = SpagePlay{}
	mi := &file_spage_core_plays_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpagePlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpagePlay) ProtoMessage() {}

func (x *SpagePlay) ProtoReflect() protoreflect.Message {
	mi := &file_spage_core_plays_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpagePlay.ProtoReflect.Descriptor instead.
func (*SpagePlay) Descriptor() ([]byte, []int) {
	return file_spage_core_plays_proto_rawDescGZIP(), []int{0}
}

func (x *SpagePlay) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SpagePlay) GetPlaybook() string {
	if x != nil {
		return x.Playbook
	}
	return ""
}

func (x *SpagePlay) GetInventory() string {
	if x != nil {
		return x.Inventory
	}
	return ""
}

func (x *SpagePlay) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SpagePlay) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *SpagePlay) GetStatus() PlayStatus {
	if x != nil {
		return x.Status
	}
	return PlayStatus_PLAY_STATUS_UNSPECIFIED
}

func (x *SpagePlay) GetTasks() []*SpageTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *SpagePlay) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SpagePlay) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SpagePlay) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *SpagePlay) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *SpagePlay) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_spage_core_plays_proto protoreflect.FileDescriptor

const file_spage_core_plays_proto_rawDesc = "" +
	"\n" +
	"\x16spage/core/plays.proto\x12\n" +
	"spage.core\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17spage/core/common.proto\"\xd6\x04\n" +
	"\tSpagePlay\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bplaybook\x18\x02 \x01(\tR\bplaybook\x12\x1c\n" +
	"\tinventory\x18\x03 \x01(\tR\tinventory\x12\x1a\n" +
	"\bhostname\x18\x04 \x01(\tR\bhostname\x12B\n" +
	"\tvariables\x18\x05 \x03(\v2$.spage.core.SpagePlay.VariablesEntryR\tvariables\x12.\n" +
	"\x06status\x18\x06 \x01(\x0e2\x16.spage.core.PlayStatusR\x06status\x12+\n" +
	"\x05tasks\x18\a \x03(\v2\x15.spage.core.SpageTaskR\x05tasks\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"started_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x14\n" +
	"\x05error\x18\f \x01(\tR\x05error\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xa8\x01\n" +
	"\n" +
	"PlayStatus\x12\x1b\n" +
	"\x17PLAY_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13PLAY_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13PLAY_STATUS_RUNNING\x10\x02\x12\x19\n" +
	"\x15PLAY_STATUS_COMPLETED\x10\x03\x12\x16\n" +
	"\x12PLAY_STATUS_FAILED\x10\x04\x12\x18\n" +
	"\x14PLAY_STATUS_CANCELED\x10\x05B6Z4github.com/AlexanderGrooff/spage-protobuf/spage/coreb\x06proto3"

var (
	file_spage_core_plays_proto_rawDescOnce sync.Once
	file_spage_core_plays_proto_rawDescData []byte
)

func file_spage_core_plays_proto_rawDescGZIP() []byte {
	file_spage_core_plays_proto_rawDescOnce.Do(func() {
		file_spage_core_plays_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spage_core_plays_proto_rawDesc), len(file_spage_core_plays_proto_rawDesc)))
	})
	return file_spage_core_plays_proto_rawDescData
}

var file_spage_core_plays_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spage_core_plays_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_spage_core_plays_proto_goTypes = []any{
	(PlayStatus)(0),               // 0: spage.core.PlayStatus
	(*SpagePlay)(nil),             // 1: spage.core.SpagePlay
	nil,                           // 2: spage.core.SpagePlay.VariablesEntry
	(*SpageTask)(nil),             // 3: spage.core.SpageTask
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_spage_core_plays_proto_depIdxs = []int32{
	2, // 0: spage.core.SpagePlay.variables:type_name -> spage.core.SpagePlay.VariablesEntry
	0, // 1: spage.core.SpagePlay.status:type_name -> spage.core.PlayStatus
	3, // 2: spage.core.SpagePlay.tasks:type_name -> spage.core.SpageTask
	4, // 3: spage.core.SpagePlay.created_at:type_name -> google.protobuf.Timestamp
	4, // 4: spage.core.SpagePlay.updated_at:type_name -> google.protobuf.Timestamp
	4, // 5: spage.core.SpagePlay.started_at:type_name -> google.protobuf.Timestamp
	4, // 6: spage.core.SpagePlay.completed_at:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_spage_core_plays_proto_init() }
func file_spage_core_plays_proto_init() {
	if File_spage_core_plays_proto != nil {
		return
	}
	file_spage_core_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spage_core_plays_proto_rawDesc), len(file_spage_core_plays_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spage_core_plays_proto_goTypes,
		DependencyIndexes: file_spage_core_plays_proto_depIdxs,
		EnumInfos:         file_spage_core_plays_proto_enumTypes,
		MessageInfos:      file_spage_core_plays_proto_msgTypes,
	}.Build()
	File_spage_core_plays_proto = out.File
	file_spage_core_plays_proto_goTypes = nil
	file_spage_core_plays_proto_depIdxs = nil
}
